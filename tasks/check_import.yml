---
- delegate_to: localhost
  run_once: yes
  block:  
    - name: Get list of archives in repo
      # desc: Get all existing archives in the borg repository.
      ansible.builtin.expect:
        command: "{{ borgbackup_borgpath }} list --json {{ (borgbackup_sshcommand is defined)|ternary(\"--rsh '\"+(borgbackup_sshcommand|default(''))+\"'\",'') }}"
        responses:
          "^Enter passphrase for key [^\\n]+:": "{{ borgbackup_passphrase }}"
      environment:
        "TZ": "UTC"
        "BORG_REPO": "{{ borgbackup_repo }}"
      changed_when: no
      register: _result_borglist_raw

    - name: Convert borg list output to JSON
      # desc: Convert the stringified JSON to proper JSON.
      ansible.builtin.set_fact:
        _result_borglist: "{{ _result_borglist_raw.stdout_lines[1:]|join()|from_json }}"

    - name: Get list of Outline exports
      # desc: Get all files in the exports directory.
      ansible.builtin.find:
        file_type: file
        paths:
          - "{{ outline_exports_dir }}"
        patterns:
          - "*.zip"
      register: _result_outlineexports

    - name: Unarchive zip file, checkout borg archive and diff them
      # desc: For each ZIP-file which has a borg archive in the repository, unzip it and checkout the borg archive and compare them against each other.
      when: (_result_borglist|community.general.json_query(query)|length) > 0
      ansible.builtin.include_tasks:
        file: _unarchive_diff.yml
      vars:
        _outline_archive: "{{ item.path }}"
        _borgbackup_archive: "{{ (_result_borglist|community.general.json_query(query)|first).name }}"
        _borgbackup_timestamp: >-
          {% if outline_exports_timesource in ['ctime','atime','mtime'] -%}
          {{ now().utcfromtimestamp(item[outline_exports_timesource]).strftime(_borgbackup_timeformat) }}
          {%- else -%}
          {{ (item.path|basename|to_datetime(outline_exports_pattern)).strftime(_borgbackup_timeformat) }}
          {%- endif %}
        query: "archives[?starts_with(time,'{{ _borgbackup_timestamp }}')]"
      loop: "{{ _result_outlineexports.files }}"
...
